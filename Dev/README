Helios DEV project
------------------

Currently only works with OS X 10.7 and higher.

Requires GLFW



.h3dmesh fileformat
===================

// little endian
// Future versions will allow multi-texturing and bone weights
// All polygons must be triangulated.

[4 bytes] - Header
 {
    [ushort] 0x4E05 fileformat
    [ushort] 0x0001 version
 }
[uint32_t] - Vertex blob size n
[n bytes] - Vertex blob of structs:

// If there are bones, the vertices must be premultiplied by the
// inverse of the absolute translation of the joint.  This way we
// can directly use the vertices with the absolute matrix that's been
// precomputed.
struct Vertex
{
    float pos[4];
    ushort tex_s;
    ushort tex_t;
    ushort joint_id;
    ushort extrudable; // will cast shadow volumes
    uchar  color[4];
    uchar  normal[4];
}
[uint32_t] - Indices blob size n
[n bytes] - Indices blob:

struct Index
{
    uint32_t index;
}

[4 bytes] - Number of joints
[? bytes] - Joint blob of structs:

// the absolute matrix is the concatenation of all of the parent
// matrices and the local matrix.
// the relative matrix is the local matrix.

struct Joint
{
    float[4][4] absolute_matrix;
    float[4][4] relative_matrix; 
    ushort      joint_id;
    ushort      parent;
    uint32_t    frameCount;
    
    // array of frames of frameCount * sizeof(Frame) bytes
    struct Frame
    {
        float[4][4] matrix;
        float time;
    }
}

[4 bytes] - Materials blob size n
[n bytes] of material blob structs:

struct Material
{
    uchar emissive[4];
    uchar specular[4];
    uchar ambient[4];
    float shininess;
    uint32_t index_start;
    uint32_t index_end;
    uchar texturename[36];
}
